# -*- mode: python; -*-
#
# craftr_module(baremetal_hi)

from craftr import *
from craftr.ext import rules
from craftr.ext.compiler.gcc import GccCompiler
from craftr.ext.unix import Objcopy
from craftr.utils import prepend_path

prepend_path(path.expanduser('~/opt/bin'))

target = environ.get('TARGET', 'arm-eabi') + '-'
objcopy = Objcopy(target + 'objcopy')
gcc = ld = GccCompiler(target + 'gcc', language = None)
gcc = gcc.fork(
  defines = ['BmArm'],
  additional_flags = [
    '-mcpu=arm926ej-s', '-nodefaultlibs', '-nostdlib',
    '-nostartfiles', '-ffreestanding',
  ],
)


test = gcc.compile(
  sources = path.local('test.c'),
)

startup = gcc.compile(
  sources = [path.local('startup.S')],
  defines = ['RESET_ON_MAIN_COMPLETE'],
)

test_elf = ld.link(
  output = 'test.elf',
  linker_script = path.local('link.craftr.ld'),
  inputs = [ test, startup],
)


test_bin = objcopy.objcopy(
  inputs = [test_elf],
  output_format = 'binary',
)

run = rules.run(
  'qemu-system-arm', '-M', 'versatilepb', '-m', '128M', '-no-reboot', '-kernel', '$in', '-nographic',
  inputs = [test_bin],
)
